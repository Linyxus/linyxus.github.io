<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>macOS on Linro</title>
    <link>https://blog.linyxus.xyz/tags/macos/</link>
    <description>Recent content in macOS on Linro</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 12 Dec 2019 17:28:00 +0800</lastBuildDate>
    
	<atom:link href="https://blog.linyxus.xyz/tags/macos/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Playing with keyboard on macOS with Karabiner</title>
      <link>https://blog.linyxus.xyz/posts/macos-keyboard-karabiner/</link>
      <pubDate>Thu, 12 Dec 2019 17:28:00 +0800</pubDate>
      
      <guid>https://blog.linyxus.xyz/posts/macos-keyboard-karabiner/</guid>
      <description>本文会简单地介绍 macOS 上的键盘修改工具 Karabiner，并且简单介绍我配置的修改方式。
引子 关于 macOS 的输入法 在macOS上，一直让我很头疼的一件事情是自带的输入法对中文输入不是非常友好。由于对 中文输入者而言，在中英文之间切换是相对常见的操作，大多数人习惯使用Shift切换，因 为绝大多数中文输入法都默认这一点。但macOS上默认使用Capslock。
这并不是关键之处，让我完全不能好好使用macOS自带输入法的根本原因会在下面提到：我 需要把Capslock用作他用。
事实上，第三方输入法我也尝试过，从国产经典的搜狗，到较为小众的落格。搜狗的毛病在 于有广告，界面也未免太花里胡哨，而落格的致命之处在于词库实在太难用，有时候首选词 叫人完全无法理解，不仅如此，落格最主要的卖点：双拼，也对使用全拼的我毫无吸引力。
通过 Karabiner，可以把Shift配置为我想要的样子。
关于修改CapsLock 修改CapsLock应该是很多程序员的必备操作了。Capslock的位置处于整张键盘上最容易按到 的地方之一，却基本是最少使用到的按键，这很不合理。
我们可以把Capslock转而映射到Control（对于Emacs用户）或Escape（对于Vim用户）来很 大地提高键盘的使用效率。
之前发现了一个很棒的工具，名为Xcape，能够 同时 把Capslock映射到Control与Escape， 这很容易实现——Escape和Control的使用事实上是不重合的，使用场景有明显的差异： Control是修饰键，与其他按键一起按下，而Escape常常是独立按下的。也可以通过按下的 时间来区分他们。
很遗憾的是，Xcape 并不支持macOS 。
但 Karabiner 弥补了这一遗憾。
Karabiner的安装 Karabiner
Karabiner 的安装非常简单，直接在官网上下载dmg，双击安装即可。
值得一提的是，Karabiner的官网上也有一个官方整理的 Complex modifications 集合，大 多数常用的修改方式只需要 import 这上面的修改即可，修改的定义方式是json，语法也颇 为直观，必要时可以修改。
Modification I: 使用Shift切换中英文 利用 Shift 切换中英文有一个很直观的实现：单独按下时，发送Capslock，否则仍然发送 Shift。这个实现在上面提到的集合中就有 现成的。
然而，在使用过程中，我发现了一些问题：在一些情况下，如Chrome和PyCharm，这样的实 现会产生一些非常奇怪的Bug：输入的英文皆为大写。尝试解决无果，我转向了第二种方案： 类似实现，只不过直接发送切换输入法的快捷键，而不是Capslock。
{ &amp;#34;description&amp;#34;: &amp;#34;Change left_shift to control+option+space if pressed alone (rev 2)&amp;#34;, &amp;#34;manipulators&amp;#34;: [ { &amp;#34;from&amp;#34;: { &amp;#34;key_code&amp;#34;: &amp;#34;left_shift&amp;#34;, &amp;#34;modifiers&amp;#34;: { &amp;#34;optional&amp;#34;: [ &amp;#34;any&amp;#34; ] } }, &amp;#34;to&amp;#34;: [ { &amp;#34;key_code&amp;#34;: &amp;#34;left_shift&amp;#34; } ], &amp;#34;to_if_alone&amp;#34;: [ { &amp;#34;hold_down_milliseconds&amp;#34;: 100, &amp;#34;key_code&amp;#34;: &amp;#34;spacebar&amp;#34;, &amp;#34;modifiers&amp;#34;: [ &amp;#34;left_control&amp;#34;, &amp;#34;left_option&amp;#34; ] } ], &amp;#34;type&amp;#34;: &amp;#34;basic&amp;#34; } ] } 我切换输入法的快捷键是 control + option + space，这样的实现到目前为止完全符合预 期，毫无问题。</description>
    </item>
    
    <item>
      <title>Dozer: 用两个小点管理你的macOS状态栏</title>
      <link>https://blog.linyxus.xyz/posts/introduction-to-dozer/</link>
      <pubDate>Mon, 11 Feb 2019 13:20:02 +0800</pubDate>
      
      <guid>https://blog.linyxus.xyz/posts/introduction-to-dozer/</guid>
      <description>macOS的状态栏设计是个饱受诟病的地方。因为从系统层面上，并不存在管理状态栏的功能（除了排序）。
  由于没有隐藏图标的功能，所以很多从来用不着也不想看的图标总是占着位置。比如Spotlight的放大镜，比如Siri的圆圈。
对于这个问题有不少流行的解决方案，Bartender是主流，也有Vanilla之流紧随其后。
  只是光是Bartender丑丑的icon就让人望而却步，Vanilla虽然icon尚算得上好看，但是它隐藏状态栏图标的实现非常丑陋，似乎是用一个窗口遮盖，这种连hack都是抬举的实现办法带来三个问题：
 由于不同应用程序的菜单栏长度不同，切换应用程序后遮盖菜单栏是家常便饭 切换到Mission Control时用于遮盖的窗口会原形毕露 变色壁纸变色时遮盖窗口来不及变色  而最重要的是，这两个家伙都要钱，价钱算不上贵，但由于他们一个长得丑，一个缺胳膊少腿，为了这种货色花钱心里总不那么舒服。
当然，也可以去一些网站上找hack过的免费解锁版本，这也是种选择。
但前些日子，我在万能的知乎上找到了几乎无可挑剔的另一个选择：
Dozer Dozer是完全开源的，Github主页在此。
具体的安装&amp;amp;使用方法在Github上都有，这里小小一提：
Install brew cask install dozer Usage 略
Github上的演示：</description>
    </item>
    
  </channel>
</rss>